(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{448:function(I,t,a){"use strict";a.r(t);var i=a(9),r=Object(i.a)({},(function(){var I=this,t=I.$createElement,a=I._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":I.$parent.slotKey}},[a("h1",{attrs:{id:"_3-midiトランスポート"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-midiトランスポート"}},[I._v("#")]),I._v(" 3. MIDIトランスポート")]),I._v(" "),a("h2",{attrs:{id:"_3-1-midi-1-0-および-midi-2-0-対応トランスポートの-midi-ci"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-midi-1-0-および-midi-2-0-対応トランスポートの-midi-ci"}},[I._v("#")]),I._v(" 3.1 MIDI 1.0 および MIDI 2.0 対応トランスポートの MIDI-CI")]),I._v(" "),a("p",[I._v("MIDI 2.0 の中心的な目標の 1 つは、MIDI 2.0 双方向通信を追加し、MIDI 1.0 トランスポートでもユーザー エクスペリエンスを向上できるようにすることである。")]),I._v(" "),a("p",[I._v("MIDI-CI の検出、Profile、property交換、およびプロセスの問い合わせは、System Exclusiveメッセージを使用して実装される。したがって、MIDI-CI は、既存の MIDI 1.0 トランスポート (5 PIN DIN、USB MIDI 1.0、RTP MIDI、BLE MIDI、Web MIDI など) および MIDI 2.0 対応トランスポートに実装できる。")]),I._v(" "),a("h2",{attrs:{id:"_3-2-4-つの主要文書"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-つの主要文書"}},[I._v("#")]),I._v(" 3.2 4 つの主要文書")]),I._v(" "),a("p",[I._v("すべての MIDI 2.0 対応トランスポートは、Universal MIDI Packet (UMP) Formatで MIDI メッセージを表現する。 Universal MIDI Packet (UMP) Formatおよび MIDI 2.0 protocol仕様で定義されているすべての機能には、UMP データ フォーマットによる MIDI 2.0 対応トランスポートが必要である。")])])}),[],!1,null,null,null);t.default=r.exports}}]);